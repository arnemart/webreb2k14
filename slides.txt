> Abstract
> ========
>
> Not mobile-unfriendly UI components with React
>
> React is a fairly new UI library for Javascript. Yes, there s literally a ton of those around,
> but React is a product of out-of-the-box thinking and does things a bit differently than most of the others.

> All the cool people are using React these days, so let s jump on that bandwagon and add some more buzzwords
> (mobile! Topcoat!) for good measure. This talk will give you a quick introduction to what React can do and
> show you how to write simple components, and we'll take a quick look at how you can make sure your components
> don t crash and burn on mobile.

# Hello

~

~

~Arne Martin Aurlien
Boost Communications
github.com/arnemart
@arnemart

> Hello etc.
> My name is Arne Martin. I work for a company but that is not really that interesting or important.

----

# Befungius

--

~

~

~An _N-dimensional_, `multi-threaded`, __self-hosted__ befunge interpreter
--
with a super fast tracing JIT compiler
--
and a voxel.js based editor

> Today I will be presenting befungius, my new enterprise-level befunge interpreter.
> It is supports an arbitrary number of dimensions and is multithreaded. It is also
> self-hosted, and has a super fast tracing JIT compiler.
> There is also a voxel.js based editor, where you can navigate your code in three dimensions.
>
> This will change the face of lemmings-like programming forever.

----

# j/k

~

~(sorry)

> (To the two of you that laughet at the joke: I'll buy you a beer later.)


----

~

# Not-mobile-unfriendly

# UI components with React

~

~(And Topcoat)

~

~

> So for my _actual topic_, I'll be talking about react.
> I'll be talking at you for a while, and then there will hopefully be some code.
>
> Like all chronic yak shavers I have written my own presentation tool (called slid.js),
> check it out on github if you feel like reading some code that will make you
> literally want to gouge your eyes out with a spoon.

----

~

# React

~

--
* Yes, itâ€™s another Javascript UI library
--
* (But it has some special tricks up its sleeves)
--
* Created by Facebook! Can you believe it
--
* Wonderfully limited in functionality


----

~

# The DOM is stupid

~

--
* A stateful mess
--
* Frameworks provide two-way binding between UI and app state
--
* And that gets hairy FAST


> As everybody knows, the DOM is stupid and hard to work with. Frameworks like Angular, Backbone, Ember, Knockout
> provide two-wey data binding between the DOM and the application state. Without discipline this gets messy and
> ugly and hairy real fast.

----

~

# Solution:

~

--
* Re-render everything on every update!
--
* Treat your app like a stateless web app

> The react solution: Re-render the world every time a piece of data changes. This way you can treat the UI in
> your app like it was a classic stateless serverside web app, where you start from scratch on every request.
> I told you React was kind of unorthodox, didn't I?

----

~

# But isn't the DOM slow

~

--
* Yes
--
* It's super slow
--
* So let's make our own DOM!
--
* Render everything to a virtual DOM
--
* Diff with real DOM, apply minimal changes to keep in sync

> The DOM is super slow.










----

# Side note

--
* React has super helpful error messages
--

```javascript
React.div({
    style: "color: #a0df00; font-family: 'Comic Neue'"
});
```

--

_The 'style' prop expects a mapping from style properties to values, not a string._

--

```javascript
React.div({
    style: { color: '#a0df00', fontFamily: 'Comic Neue' }
});
```

----

# .jsx

~

~Or: There's always a catch

--
* JS: Not good enough
--
* JSX: Crazy
--

```javascript
var c = React.createClass({
    render: function() {
        return <div class="wat">
            <span>I'm HTML inside javascript</span>
            <span>Why do I exist</span>
        </div>
    }
});
```

----

# .jsx

~

~Or: There's always a catch

* JS: Not good enough
* JSX: Crazy

```javascript
var c = React.createClass({
    render: function() {
        return React.div({ className: wat },
            React.span(null, "I'm HTML inside javascript"),
            React.span(null, "Why do I exist")
        );
    }
});
```

--
* I don't like jsx so let's not spend any more time on it.

> A solid JS api isn't good enough for the facebook devs,
> so they created jsx, a batshit crazy way of putting html inside your JS.
> Transpiles to the equivalent JS api calls at build-time.
> I'm "opinionated" and I don't like this so let's not waste any more time on it.
> Thankfully it is completely optional.
